services:
  flask-app:
    image: ebenco36/mpvis_app:latest
    container_name: mpvis_app
    ports:
      - "${FLASK_RUN_PORT}:8081"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.development
    volumes:
      - flask-app-data:/var/app/data
    networks:
      - app-networks

  postgres:
    container_name: "metaMPDB"
    image: postgres:latest
    deploy:
      resources:
        limits:
          memory: 3G 
    environment:
      POSTGRES_DB: mpvis_db
      POSTGRES_USER: mpvis_user
      POSTGRES_PASSWORD: mpvis_user
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      # - ./serverConfig/init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount the init script
    env_file: 
      - .env
    networks:
      - app-networks

  frontend:
    image: ebenco36/mpfrontend:latest
    container_name: MPfrontend
    ports:
      - "80:80"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:${FLASK_RUN_PORT}
    networks:
      - app-networks

  redis:
    image: redis
    deploy:
      resources:
        limits:
          memory: 2G 
    container_name: metaMPRedis
    ports:
      - "6379:6379"  # Expose the Redis port
    volumes:
      - redis-data:/data
    networks:
      - app-networks


networks:
  app-networks:
    driver: bridge

volumes:
  flask-app-data:
  pgdata:
  redis-data:
